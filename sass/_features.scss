.features {
	grid-column: center-start / center-end;

	margin: 15rem 0;

	display: grid;
	grid-gap: 6rem;

	// Pour aligner le début de tous les textes (utile quand il ya des textes + courts)
	align-items: start;

	// On crée 3 colonnes divisés en 3 fractions
	// Pas besoin de définir une 2ème row, elle se créera automatiquement en implicit grid
	// Le problème, c'est que ce n'est pas responsive
	// grid-template-columns: repeat(3, 1fr);

	// Dans ce cas figure, c'est responsive, en rétrécissant la page, les 3 colonnes vont se transformer en 2 colonnes puis 1 colonne !
	// Explication : On définit auto-fit pour chaque grid-item, et la taille de chacun d'eux se situera entre 250px et 1 fraction (1 fraction = elle occupera toute la largeur dispo, 250px = quand ils seront atteint on passe en mode 2-colonne ou 1-colonne en occupant entre 250px et 1fr
	grid-template-columns: repeat(auto-fit, minmax(25rem, 1fr));
}

// Reusable Styles
.feature {
	display: grid;
	grid-row-gap: 1.5rem;
	grid-column-gap: 2.5rem;

	// Colonne 1 : l'icône utilise la place qui lui est nécessaire
	// Colonne 2 : Occupe tout l'espace restant
	grid-template-columns: min-content 1fr;

	&__icon {
		fill: $color-primary;
		width: 4.5rem;
		height: 4.5rem;
		transform: translateY(-1rem);

		grid-row: 1 / span 2;
	}

	&__text {
		font-size: 1.7rem;
	}
}
