////////// Objectif de cette section : //////////
// Gérer le Vertical Spacing dans un Responsive Layout en utilisant Grid
// Utilisation de max-content (en opposition à min-content) dans Grid
// Comment utiliser les Pseudo-Éléments ::after et ::before en tant que Grid Items

.header {
	grid-column: full-start / col-start 7;
	background-image: linear-gradient(
			rgba($color-secondary, 0.93),
			rgba($color-secondary, 0.93)
		),
		url(../img/hero.jpeg);
	background-size: cover;
	background-position: center;
	padding: 8rem;
	padding-top: 4rem;
	display: grid;
	grid-template-rows: 1fr min-content minmax(6rem, min-content) 1fr;
	grid-template-columns: minmax(min-content, max-content);
	grid-row-gap: 1.5rem;
	justify-content: center;

	@media only screen and (max-width: $bp-medium) {
		grid-column: 1 / -1;
	}

	@media only screen and (max-width: $bp-small) {
		padding: 5rem;
	}

	&__logo {
		height: 3rem;
		justify-self: center;
	}

	&__btn {
		align-self: start;
		justify-self: start;
	}

	&__seenon-text {
		font-size: 1.6rem;
		color: $color-grey-light-2;
		display: grid;
		grid-column-gap: 1.5rem;
		grid-template-columns: 1fr max-content 1fr;
		align-items: center;

		&::before,
		&::after {
			content: "";
			height: 1px;
			display: block;
			background-color: currentColor;
		}
	}

	&__seenon-logos {
		display: grid;
		grid-column-gap: 3rem;
		grid-template-columns: repeat(4, 1fr);
		justify-items: center;
		align-items: center;

		img {
			max-height: 2.5rem;
			max-widht: 100%;
			filter: brightness(70%);

			@media only screen and (max-width: $bp-small) {
				max-height: 1.5rem;
			}
		}
	}
}
